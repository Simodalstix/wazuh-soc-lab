# Filebeat Configuration for Linux Systems - Wazuh SOC Lab
# Generated by Ansible for {{ inventory_hostname }}
# Agent Group: {{ wazuh_agent_groups | join(', ') }}

# ============================== Filebeat inputs ===============================

filebeat.inputs:

# System logs
- type: log
  enabled: true
  paths:
    - /var/log/syslog
    - /var/log/messages
  fields:
    logtype: system
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  multiline.pattern: '^\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}'
  multiline.negate: true
  multiline.match: after
  exclude_lines: ['DEBUG', 'TRACE']

# Authentication logs
- type: log
  enabled: true
  paths:
    - /var/log/auth.log
    - /var/log/secure
  fields:
    logtype: authentication
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  multiline.pattern: '^\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}'
  multiline.negate: true
  multiline.match: after

# Kernel logs
- type: log
  enabled: true
  paths:
    - /var/log/kern.log
    - /var/log/dmesg
  fields:
    logtype: kernel
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  multiline.pattern: '^\[\s*\d+\.\d+\]'
  multiline.negate: true
  multiline.match: after

# Cron logs
- type: log
  enabled: true
  paths:
    - /var/log/cron
    - /var/log/cron.log
  fields:
    logtype: cron
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

# Mail logs
- type: log
  enabled: true
  paths:
    - /var/log/mail.log
    - /var/log/maillog
  fields:
    logtype: mail
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

{% if 'web' in wazuh_agent_groups %}
# Apache access logs
- type: log
  enabled: true
  paths:
    - /var/log/apache2/access.log
    - /var/log/httpd/access_log
  fields:
    logtype: apache_access
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  exclude_lines: ['robots.txt', 'favicon.ico']

# Apache error logs
- type: log
  enabled: true
  paths:
    - /var/log/apache2/error.log
    - /var/log/httpd/error_log
  fields:
    logtype: apache_error
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  multiline.pattern: '^\[\w{3}\s+\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}\.\d+\s+\d{4}\]'
  multiline.negate: true
  multiline.match: after

# Nginx access logs
- type: log
  enabled: true
  paths:
    - /var/log/nginx/access.log
  fields:
    logtype: nginx_access
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

# Nginx error logs
- type: log
  enabled: true
  paths:
    - /var/log/nginx/error.log
  fields:
    logtype: nginx_error
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  multiline.pattern: '^\d{4}/\d{2}/\d{2}\s+\d{2}:\d{2}:\d{2}'
  multiline.negate: true
  multiline.match: after

# PHP-FPM logs
- type: log
  enabled: true
  paths:
    - /var/log/php*.log
    - /var/log/php-fpm/*.log
  fields:
    logtype: php
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  multiline.pattern: '^\[\d{2}-\w{3}-\d{4}\s+\d{2}:\d{2}:\d{2}'
  multiline.negate: true
  multiline.match: after

# DVWA application logs
- type: log
  enabled: true
  paths:
    - /var/www/html/dvwa/logs/*.log
    - /opt/dvwa/logs/*.log
  fields:
    logtype: dvwa
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
    application: dvwa
  fields_under_root: true
{% endif %}

{% if 'database' in wazuh_agent_groups %}
# MySQL logs
- type: log
  enabled: true
  paths:
    - /var/log/mysql/error.log
    - /var/log/mysqld.log
    - /var/log/mariadb/mariadb.log
  fields:
    logtype: mysql_error
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  multiline.pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z'
  multiline.negate: true
  multiline.match: after

# MySQL slow query logs
- type: log
  enabled: true
  paths:
    - /var/log/mysql/mysql-slow.log
    - /var/log/mysqld-slow.log
  fields:
    logtype: mysql_slow
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  multiline.pattern: '^# Time:'
  multiline.negate: true
  multiline.match: after

# MySQL general logs
- type: log
  enabled: true
  paths:
    - /var/log/mysql/mysql.log
  fields:
    logtype: mysql_general
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

# PostgreSQL logs
- type: log
  enabled: true
  paths:
    - /var/log/postgresql/*.log
  fields:
    logtype: postgresql
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  multiline.pattern: '^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d+\s+\w+'
  multiline.negate: true
  multiline.match: after
{% endif %}

# SSH logs (extracted from auth.log for detailed analysis)
- type: log
  enabled: true
  paths:
    - /var/log/auth.log
  fields:
    logtype: ssh
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  include_lines: ['sshd', 'ssh']

# Sudo logs
- type: log
  enabled: true
  paths:
    - /var/log/auth.log
  fields:
    logtype: sudo
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  include_lines: ['sudo']

# UFW firewall logs
- type: log
  enabled: true
  paths:
    - /var/log/ufw.log
  fields:
    logtype: firewall
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

# Fail2ban logs
- type: log
  enabled: true
  paths:
    - /var/log/fail2ban.log
  fields:
    logtype: fail2ban
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

# Docker logs (if Docker is installed)
- type: log
  enabled: true
  paths:
    - /var/log/docker.log
    - /var/lib/docker/containers/*/*.log
  fields:
    logtype: docker
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true
  json.keys_under_root: true
  json.add_error_key: true

# Application logs
- type: log
  enabled: true
  paths:
    - /var/log/application/*.log
    - /opt/*/logs/*.log
  fields:
    logtype: application
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

# Custom application logs
- type: log
  enabled: true
  paths:
    - /var/log/custom/*.log
  fields:
    logtype: custom
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

# Audit logs (if auditd is installed)
- type: log
  enabled: true
  paths:
    - /var/log/audit/audit.log
  fields:
    logtype: audit
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

# System metrics via log files
- type: log
  enabled: true
  paths:
    - /var/log/sa/sar*
  fields:
    logtype: system_metrics
    environment: {{ lab.environment }}
    datacenter: {{ lab.domain }}
  fields_under_root: true

# ============================== Filebeat modules ===============================

filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: true
  reload.period: 10s

# ================================== Outputs ===================================

# Configure what output to use when sending the data collected by the beat.

# ---------------------------- Elasticsearch Output ----------------------------
output.elasticsearch:
  hosts: ["{{ wazuh_manager_ip }}:9200"]
  protocol: "https"
  username: "elastic"
  password: "{{ elasticsearch_password }}"
  ssl.certificate_authorities: ["/etc/ssl/wazuh/ca-cert.pem"]
  ssl.certificate: "/etc/ssl/wazuh/server-cert.pem"
  ssl.key: "/etc/ssl/wazuh/server-key.pem"
  ssl.verification_mode: certificate
  
  # Index settings
  index: "filebeat-{{ inventory_hostname }}-%{+yyyy.MM.dd}"
  template.name: "filebeat-{{ inventory_hostname }}"
  template.pattern: "filebeat-{{ inventory_hostname }}-*"
  template.settings:
    index.number_of_shards: 1
    index.number_of_replicas: 0
    index.codec: best_compression
    index.refresh_interval: 30s
  
  # Performance settings
  bulk_max_size: 1000
  worker: 2
  compression_level: 3
  escape_html: false

# ------------------------------ Logstash Output -------------------------------
#output.logstash:
#  hosts: ["{{ wazuh_manager_ip }}:5044"]
#  ssl.certificate_authorities: ["/etc/ssl/wazuh/ca-cert.pem"]
#  ssl.certificate: "/etc/ssl/wazuh/server-cert.pem"
#  ssl.key: "/etc/ssl/wazuh/server-key.pem"

# ================================= Processors =================================

processors:
  # Add hostname and IP information
  - add_host_metadata:
      when.not.contains.tags: forwarded
      
  # Add Docker metadata (if Docker is running)
  - add_docker_metadata: ~
  
  # Add Kubernetes metadata (if running in Kubernetes)
  - add_kubernetes_metadata: ~
  
  # Add process metadata
  - add_process_metadata:
      match_pids: [system.process.ppid]
      target: system.process.parent
      
  # Add locale information
  - add_locale: ~
  
  # Add observer metadata
  - add_observer_metadata:
      geo:
        name: "{{ lab.domain }}"
        location: "Lab Environment"
        
  # Rename fields for better organization
  - rename:
      fields:
        - from: "agent.hostname"
          to: "host.name"
        - from: "agent.name"
          to: "agent.name"
          
  # Add custom fields
  - add_fields:
      target: labels
      fields:
        environment: "{{ lab.environment }}"
        datacenter: "{{ lab.domain }}"
        agent_group: "{{ wazuh_agent_groups | join(',') }}"
        deployment: "wazuh-soc-lab"
        
  # Drop unnecessary fields to save space
  - drop_fields:
      fields: ["ecs.version", "agent.ephemeral_id", "agent.id"]
      
  # Parse timestamps
  - timestamp:
      field: "@timestamp"
      layouts:
        - '2006-01-02T15:04:05.000Z'
        - '2006-01-02T15:04:05Z'
        - 'Jan _2 15:04:05'
      test:
        - '2019-06-22T16:33:51.000Z'
        - '2019-06-22T16:33:51Z'
        - 'Jun 22 16:33:51'

# ================================== Logging ===================================

logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat
  keepfiles: 7
  permissions: 0644
  rotateeverybytes: 10485760 # 10MB

# ============================= X-Pack Monitoring ==============================

monitoring.enabled: false

# ================================= Migration ==================================

migration.6_to_7.enabled: true

# ================================== General ===================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
name: "{{ inventory_hostname }}-filebeat"

# The tags of the shipper are included in their own field with each
# transaction published.
tags: ["{{ lab.environment }}", "{{ wazuh_agent_groups | join('", "') }}", "linux"]

# Optional fields that you can specify to add additional information to the
# output.
fields:
  environment: "{{ lab.environment }}"
  datacenter: "{{ lab.domain }}"
  agent_type: "filebeat"
  os_family: "linux"

fields_under_root: false

# ================================== Template ==================================

setup.template.settings:
  index.number_of_shards: 1
  index.number_of_replicas: 0
  index.codec: best_compression
  index.refresh_interval: 30s
  index.mapping.total_fields.limit: 2000

# ================================== Dashboards ================================

setup.dashboards.enabled: false

# ================================== Kibana ====================================

setup.kibana:
  host: "{{ wazuh_manager_ip }}:5601"
  protocol: "https"
  ssl.certificate_authorities: ["/etc/ssl/wazuh/ca-cert.pem"]
  ssl.certificate: "/etc/ssl/wazuh/server-cert.pem"
  ssl.key: "/etc/ssl/wazuh/server-key.pem"
  ssl.verification_mode: certificate

# ================================= Autodiscover ===============================

filebeat.autodiscover:
  providers:
    - type: docker
      hints.enabled: true
      hints.default_config:
        type: container
        paths:
          - /var/lib/docker/containers/${data.docker.container.id}/*.log

# ================================== HTTP Endpoint =============================

http.enabled: true
http.host: "{{ ansible_default_ipv4.address }}"
http.port: 5066

# ============================= Performance Tuning ========================

# Queue settings
queue.mem:
  events: 4096
  flush.min_events: 512
  flush.timeout: 1s

# Output settings
output.elasticsearch.bulk_max_size: 1000
output.elasticsearch.worker: 2

# File settings
filebeat.inputs:
  - close_inactive: 5m
    close_removed: true
    close_renamed: false
    clean_inactive: 72h
    clean_removed: true
    scan_frequency: 10s
    harvester_buffer_size: 16384
    max_bytes: 10485760
    multiline.max_lines: 500
    backoff: 1s
    max_backoff: 10s
    backoff_factor: 2

# Registry settings
filebeat.registry.path: /var/lib/filebeat/registry
filebeat.registry.file_permissions: 0600
filebeat.registry.flush: 1s

# Shutdown settings
filebeat.shutdown_timeout: 5s

# ================================ Keystore ===================================

keystore.path: "${path.config}/filebeat.keystore"