---
# Ubuntu Web Server VM Provisioning Playbook
# Configures DVWA (Damn Vulnerable Web Application) + Apache + Wazuh Agent
# Target: Ubuntu 24.04 LTS (192.168.2.10) - DMZ Network

- name: Configure Ubuntu Web Server VM
  hosts: ubuntu-web
  become: yes
  gather_facts: yes
  vars:
    dvwa_version: "master"
    apache_document_root: "/var/www/html"
    mysql_root_password: "{{ vault_mysql_root_password | default('RootPassword123!') }}"
    dvwa_db_password: "{{ vault_dvwa_db_password | default('DVWAPassword123!') }}"

  pre_tasks:
    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    - name: Install essential packages
      apt:
        name:
          - curl
          - wget
          - git
          - vim
          - htop
          - net-tools
          - ufw
          - unzip
          - software-properties-common
        state: present

  tasks:
    # Network Configuration
    - name: Configure static network interface
      template:
        src: "{{ playbook_dir }}/../../configs/vm-templates/netplan-static.yaml.j2"
        dest: /etc/netplan/01-netcfg.yaml
        backup: yes
      vars:
        interface_name: enp0s8
        ip_address: "{{ ansible_host }}"
        netmask: "255.255.255.0"
        gateway: "192.168.2.1"
        dns_servers:
          - "192.168.3.10"
          - "8.8.8.8"
        routes:
          - to: "192.168.1.0/24"
            via: "192.168.2.1"
          - to: "192.168.3.0/24"
            via: "192.168.2.1"
      notify: apply netplan

    # Security Hardening
    - name: Configure UFW firewall
      ufw:
        rule: "{{ item.rule }}"
        port: "{{ item.port }}"
        proto: "{{ item.proto | default('tcp') }}"
        src: "{{ item.src | default('any') }}"
        comment: "{{ item.comment }}"
      loop:
        - {
            rule: "allow",
            port: "22",
            src: "192.168.1.0/24",
            comment: "SSH from Management",
          }
        - { rule: "allow", port: "80", comment: "HTTP Web Server" }
        - { rule: "allow", port: "443", comment: "HTTPS Web Server" }
        - {
            rule: "allow",
            port: "1514",
            src: "192.168.1.10",
            comment: "Wazuh Agent",
          }
        - { rule: "deny", port: "3306", comment: "Block external MySQL access" }

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny
        direction: incoming

    # LAMP Stack Installation
    - name: Install Apache web server
      apt:
        name:
          - apache2
          - apache2-utils
        state: present

    - name: Install MySQL server
      apt:
        name:
          - mysql-server
          - mysql-client
          - python3-pymysql
        state: present

    - name: Install PHP and extensions
      apt:
        name:
          - php
          - php-mysql
          - php-gd
          - php-curl
          - php-xml
          - php-mbstring
          - php-zip
          - php-json
          - libapache2-mod-php
        state: present

    # Apache Configuration
    - name: Enable Apache modules
      apache2_module:
        name: "{{ item }}"
        state: present
      loop:
        - rewrite
        - ssl
        - headers
      notify: restart apache2

    - name: Configure Apache security settings
      lineinfile:
        path: /etc/apache2/conf-available/security.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
      loop:
        - { regexp: "^ServerTokens", line: "ServerTokens Prod" }
        - { regexp: "^ServerSignature", line: "ServerSignature Off" }
      notify: restart apache2

    - name: Create Apache virtual host for DVWA
      template:
        src: "{{ playbook_dir }}/../../configs/vm-templates/apache-dvwa-vhost.conf.j2"
        dest: /etc/apache2/sites-available/dvwa.conf
        backup: yes
      notify: restart apache2

    - name: Enable DVWA site
      command: a2ensite dvwa.conf
      notify: restart apache2

    - name: Disable default Apache site
      command: a2dissite 000-default.conf
      notify: restart apache2

    # MySQL Configuration
    - name: Start and enable MySQL
      systemd:
        name: mysql
        state: started
        enabled: yes

    - name: Set MySQL root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present

    - name: Create MySQL configuration file
      template:
        src: "{{ playbook_dir }}/../../configs/vm-templates/mysql-client.cnf.j2"
        dest: /root/.my.cnf
        mode: "0600"
      vars:
        mysql_password: "{{ mysql_root_password }}"

    - name: Remove anonymous MySQL users
      mysql_user:
        name: ""
        host_all: yes
        state: absent

    - name: Remove MySQL test database
      mysql_db:
        name: test
        state: absent

    # DVWA Installation
    - name: Clone DVWA repository
      git:
        repo: https://github.com/digininja/DVWA.git
        dest: "{{ apache_document_root }}/dvwa"
        version: "{{ dvwa_version }}"
        force: yes

    - name: Set DVWA directory permissions
      file:
        path: "{{ apache_document_root }}/dvwa"
        owner: www-data
        group: www-data
        mode: "0755"
        recurse: yes

    - name: Create DVWA database
      mysql_db:
        name: dvwa
        state: present

    - name: Create DVWA database user
      mysql_user:
        name: dvwa
        password: "{{ dvwa_db_password }}"
        priv: "dvwa.*:ALL"
        host: localhost
        state: present

    - name: Configure DVWA
      template:
        src: "{{ playbook_dir }}/../../configs/vm-templates/dvwa-config.inc.php.j2"
        dest: "{{ apache_document_root }}/dvwa/config/config.inc.php"
        owner: www-data
        group: www-data
        mode: "0644"
      vars:
        db_password: "{{ dvwa_db_password }}"

    - name: Set DVWA hackable directory permissions
      file:
        path: "{{ apache_document_root }}/dvwa/hackable/uploads"
        owner: www-data
        group: www-data
        mode: "0777"
        state: directory

    - name: Set DVWA external directory permissions
      file:
        path: "{{ apache_document_root }}/dvwa/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt"
        owner: www-data
        group: www-data
        mode: "0666"
        state: touch

    # PHP Configuration for DVWA
    - name: Configure PHP settings for DVWA
      lineinfile:
        path: /etc/php/8.3/apache2/php.ini
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
      loop:
        - { regexp: "^allow_url_include", line: "allow_url_include = On" }
        - { regexp: "^allow_url_fopen", line: "allow_url_fopen = On" }
        - { regexp: "^display_errors", line: "display_errors = On" }
        - { regexp: "^magic_quotes_gpc", line: "magic_quotes_gpc = Off" }
      notify: restart apache2

    # Wazuh Agent Installation
    - name: Add Wazuh GPG key
      apt_key:
        url: https://packages.wazuh.com/key/GPG-KEY-WAZUH
        state: present

    - name: Add Wazuh repository
      apt_repository:
        repo: "deb https://packages.wazuh.com/4.x/apt/ stable main"
        state: present
        filename: wazuh

    - name: Install Wazuh agent
      apt:
        name: wazuh-agent
        state: present
        update_cache: yes

    - name: Configure Wazuh agent
      template:
        src: "{{ playbook_dir }}/../../configs/wazuh/ossec-agent-linux.conf.j2"
        dest: /var/ossec/etc/ossec.conf
        backup: yes
      vars:
        wazuh_manager_ip: "{{ wazuh_manager_ip }}"
        agent_name: "{{ wazuh_agent_name }}"
        agent_groups: "{{ wazuh_agent_groups | join(',') }}"
      notify: restart wazuh-agent

    - name: Register Wazuh agent
      command: /var/ossec/bin/agent-auth -m {{ wazuh_manager_ip }} -A {{ wazuh_agent_name }}
      args:
        creates: /var/ossec/etc/client.keys

    # Log Configuration
    - name: Configure Apache log monitoring
      blockinfile:
        path: /var/ossec/etc/ossec.conf
        marker: "<!-- {mark} APACHE LOG MONITORING -->"
        insertbefore: "</ossec_config>"
        block: |
          <localfile>
            <log_format>apache</log_format>
            <location>/var/log/apache2/access.log</location>
          </localfile>
          <localfile>
            <log_format>apache</log_format>
            <location>/var/log/apache2/error.log</location>
          </localfile>
      notify: restart wazuh-agent

    # File Integrity Monitoring
    - name: Configure FIM for web directories
      blockinfile:
        path: /var/ossec/etc/ossec.conf
        marker: "<!-- {mark} WEB FIM MONITORING -->"
        insertbefore: "</ossec_config>"
        block: |
          <syscheck>
            <directories realtime="yes" check_all="yes">/var/www/html</directories>
            <directories check_all="yes">/etc/apache2</directories>
            <directories check_all="yes">/etc/mysql</directories>
            <directories check_all="yes">/etc/php</directories>
          </syscheck>
      notify: restart wazuh-agent

    # Service Management
    - name: Enable and start services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
        daemon_reload: yes
      loop:
        - apache2
        - mysql
        - wazuh-agent

    # Create test content
    - name: Create web server info page
      template:
        src: "{{ playbook_dir }}/../../configs/vm-templates/server-info.php.j2"
        dest: "{{ apache_document_root }}/info.php"
        owner: www-data
        group: www-data
        mode: "0644"

    - name: Create index redirect page
      template:
        src: "{{ playbook_dir }}/../../configs/vm-templates/index.html.j2"
        dest: "{{ apache_document_root }}/index.html"
        owner: www-data
        group: www-data
        mode: "0644"

  handlers:
    - name: apply netplan
      command: netplan apply

    - name: restart apache2
      systemd:
        name: apache2
        state: restarted

    - name: restart mysql
      systemd:
        name: mysql
        state: restarted

    - name: restart wazuh-agent
      systemd:
        name: wazuh-agent
        state: restarted

  post_tasks:
    - name: Wait for services to be ready
      wait_for:
        port: "{{ item }}"
        host: "{{ ansible_host }}"
        timeout: 60
      loop:
        - 80 # Apache
        - 3306 # MySQL

    - name: Display Ubuntu Web Server information
      debug:
        msg:
          - "Ubuntu Web Server (DVWA) installation completed successfully!"
          - "DVWA URL: http://{{ ansible_host }}/dvwa"
          - "Server Info: http://{{ ansible_host }}/info.php"
          - "Default DVWA credentials: admin/password"
          - "MySQL root password: {{ mysql_root_password }}"
          - "DVWA database password: {{ dvwa_db_password }}"
          - "Wazuh agent registered with manager: {{ wazuh_manager_ip }}"
          - "Security Level: Set to 'low' for initial testing"

    - name: Verify services
      command: systemctl is-active {{ item }}
      register: service_status
      loop:
        - apache2
        - mysql
        - wazuh-agent
      failed_when: service_status.stdout != "active"
